/* tslint:disable */
/* eslint-disable */
/**
 * PK.PHCalc.OutsourcingDummy
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MachineDetailDTO,
    MachineDetailDTOFromJSON,
    MachineDetailDTOToJSON,
    MachineSummaryDTO,
    MachineSummaryDTOFromJSON,
    MachineSummaryDTOToJSON,
} from '../models';

export interface MachineGetRequest {
    id: string;
}

export interface MachineUpdateRequest {
    model: MachineDetailDTO;
}

/**
 * 
 */
export class MachineApi extends runtime.BaseAPI {

    /**
     */
    async machineGetRaw(requestParameters: MachineGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<MachineDetailDTO>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling machineGet.');
        }else{
            console.log(requestParameters)
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/machine/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        console.log(`respone:`,response)

        return new runtime.JSONApiResponse(response, (jsonValue) => MachineDetailDTOFromJSON(jsonValue));
    }

    /**
     */
    async machineGet(requestParameters: MachineGetRequest, initOverrides?: RequestInit): Promise<MachineDetailDTO> {
        const response = await this.machineGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async machineListRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<MachineSummaryDTO>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/machine`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MachineSummaryDTOFromJSON));
    }

    /**
     */
    async machineList(initOverrides?: RequestInit): Promise<Array<MachineSummaryDTO>> {
        const response = await this.machineListRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async machineUpdateRaw(requestParameters: MachineUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.model === null || requestParameters.model === undefined) {
            throw new runtime.RequiredError('model','Required parameter requestParameters.model was null or undefined when calling machineUpdate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/machine`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: MachineDetailDTOToJSON(requestParameters.model),
        }, initOverrides);
        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async machineUpdate(requestParameters: MachineUpdateRequest, initOverrides?: RequestInit): Promise<object> {
        const response = await this.machineUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
